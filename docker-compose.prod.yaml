# productuoj docker-compose
# docker-compose 파일의 버전을 명시
version: "3"

services: # 서비스들의 시작
  # 앱 설정
  lion-app:
    # depends_on:
    #   - db
    container_name: lion-app-dc
    build:
      context: lion_app
      dockerfile: Dockerfile # 사용할 도커 파일의 이름
    image: likelion-cr-mh.kr.ncr.ntruss.com/lion-app:latest
    ports:
      - "8000:8000" # 앞쪽이 호스트 시스템의 포트 : 뒤쬑이 컨테이너의 포트
    volumes:
      - ~/.aws:/root/.aws:ro # read only 
      # - ./lion_app:/app # docker 이미지를 github actions 에서 가져오게 되는데,
      # 위 코드를 실행하면 최신 이미지를 이전 이미지 파일이 덮어 쓰게 되니 삭제해 준다.
      - staticfiles:/var/www/html/static
    command:
      - "/start"
    env_file:
      - ./.envs/prod/django
      - ./.envs/prod/db
      - ./.envs/prod/server
    environment:
      - AWS_SECRET_NAME=like/lion/prod

  nginx:
    restart: always
    depends_on:
      - lion-app
    container_name: lion-nginx-dc
    build:
      context: .
      dockerfile: Dockerfile.nginx_ubt
      # args:
      #   LOCAL_IP: "110.165.17.207" # 원래는 도메인 주소 값
    image: lion-nginx
    ports:
      - "8888:80"
    volumes:
      - staticfiles:/var/www/html/static
    env_file: # nginx 컨테이너에도 같은 환경변수가 들어가게 됨
     - ./.envs/prod/server

  # db:
  #   image: postgres:15
  #   env_file:
  #     - ./.envs/prod/db
  #   ports:
  #     - "15432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  # mongo:
  #   container_name: mongo
  #   image: mongo:latest
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - mongo_data:/data/db

volumes:
  staticfiles:


