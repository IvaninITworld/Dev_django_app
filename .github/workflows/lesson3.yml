name: CD using Docker Image

on:
  # workflow_dispatch:
  push:
    branches:
      - main

env:
    # IMAGE_TAG: ${{ vars.NCP_CONTAINER_REGISTRY }}/lion-app:latest
    IMAGE: ${{ vars.NCP_CONTAINER_REGISTRY }}/lion-app
    IMAGE_TAG: ${{ vars.NCP_CONTAINER_REGISTRY }}/lion-app:latest

jobs:
    build_push_to_ncp:
        name: push to NCP container registry
        runs-on: ubuntu-latest
        steps:
            # checkout to the branch and get the codes
            - name: Checkout code
              uses: actions/checkout@v3

            # buildx - support amd64, arm64
            - name: Set up Docker buildx
              uses: docker/setup-buildx-action@v2
            
            # NCP Login
            - name: Login to NCR
              uses: docker/login-action@v2
              with:
                # registry: where to login
                registry: ${{ vars.NCP_CONTAINER_REGISTRY }}
                username: ${{ secrets.NCP_ACCESS_KEY }}
                password: ${{ secrets.NCP_SECRET_KEY }}
            
            - name: Get current timestamp
              run: echo "timestamp=$(date '+%s')" >> "$GITHUB_OUTPUT"

            - name: Build and Export
              uses: docker/build-push-action@v4
              with:
                context: lion_app # location where image will be built
                push: true # This indicates push event
                tags: ${{ env.IMAGE_TAG }},"${{ env.IMAGE }}:${{ steps.timestamp.outputs.timestamp }}"
                
                      
    pull_from_ncp:
        name: Connect to Server via SSH and pull from NCP
        needs: build_push_to_ncp
        runs-on: ubuntu-latest
        steps:
            - name: git pull via SSH
              uses: appleboy/ssh-action@v1.0.0
              with:
                host: ${{ secrets.HOST }}
                username: ${{ secrets.USERNAME }}
                password: ${{ secrets.PASSWORD }}
                script: | # while actions is running, please use options !
                    cd dev_django_app
                    git pull
                    echo "${{ secrets.NCP_SECRET_KEY }}" | dockers login ${{ vars.NCP_CONTAINER_REGISTRY }} --username ${{ secrets.NCP_ACCESS_KEY }} --password-stdin
                    docker pull ${{ env.IMAGE_TAG }}
                    # docker-compose -f docker-compose.prod.yml up --build -d
                    docker stop lion-app-dc && docker rm lion-app-dc
                    docker run -p 8000:8000 -d \
                    -v ~/.aws:/root/.aws:ro \
                    --env-file .envs/prod/django --env-file .envs/prod/db --env-file .envs/prod/server \
                    --name lion-app-dc \
                    ${{ env.IMAGE_TAG }} \
                    /start

            - name: echo IMAGE_TAG
              run: echo $IMAGE_TAG